version: '3.8'

services:

  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_DATABASE: posts
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  userservice:
    container_name: user_service
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    restart: on-failure
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
      - MYSQL_DB_NAME=posts
      - KAFKA_HOST=kafka
    depends_on:
      - mysql
      - kafka
    networks:
      - app-network


  postservice:
    build:
      context: ../post-service/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    restart: on-failure
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
      - MYSQL_DB_NAME=posts
    depends_on:
      - mysql
      - userservice
    networks:
      - app-network


  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CREATE_TOPICS=user_deleted:1:1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:1
    depends_on:
      - zookeeper

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
